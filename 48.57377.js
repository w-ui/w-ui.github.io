webpackJsonp([48],{106:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _qrcode = __webpack_require__(107);\n\nObject.defineProperty(exports, 'default', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_qrcode).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL3BhY2thZ2VzL3FyY29kZS9pbmRleC5qcz82Y2FiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL3NyYy9xcmNvZGUudnVlJ1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHBhY2thZ2VzL3FyY29kZS9pbmRleC5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7OztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///106\n")},107:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('Object.defineProperty(__webpack_exports__, "__esModule", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_qrcode_vue__ = __webpack_require__(76);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_qrcode_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_qrcode_vue__);\n/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_qrcode_vue__) if(__WEBPACK_IMPORT_KEY__ !== \'default\') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_qrcode_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3be71fc4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_qrcode_vue__ = __webpack_require__(110);\nvar normalizeComponent = __webpack_require__(3)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_qrcode_vue___default.a,\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3be71fc4_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_qrcode_vue__["a" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__["default"] = (Component.exports);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcXJjb2RlL3NyYy9xcmNvZGUudnVlPzRhNmIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG5vcm1hbGl6ZUNvbXBvbmVudCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2NvbXBvbmVudC1ub3JtYWxpemVyXCIpXG4vKiBzY3JpcHQgKi9cbmV4cG9ydCAqIGZyb20gXCIhIWJhYmVsLWxvYWRlciEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL3FyY29kZS52dWVcIlxuaW1wb3J0IF9fdnVlX3NjcmlwdF9fIGZyb20gXCIhIWJhYmVsLWxvYWRlciEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL3FyY29kZS52dWVcIlxuLyogdGVtcGxhdGUgKi9cbmltcG9ydCBfX3Z1ZV90ZW1wbGF0ZV9fIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleD97XFxcImlkXFxcIjpcXFwiZGF0YS12LTNiZTcxZmM0XFxcIixcXFwiaGFzU2NvcGVkXFxcIjpmYWxzZSxcXFwiYnVibGVcXFwiOntcXFwidHJhbnNmb3Jtc1xcXCI6e319fSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vcXJjb2RlLnZ1ZVwiXG4vKiB0ZW1wbGF0ZSBmdW5jdGlvbmFsICovXG52YXIgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fID0gZmFsc2Vcbi8qIHN0eWxlcyAqL1xudmFyIF9fdnVlX3N0eWxlc19fID0gbnVsbFxuLyogc2NvcGVJZCAqL1xudmFyIF9fdnVlX3Njb3BlSWRfXyA9IG51bGxcbi8qIG1vZHVsZUlkZW50aWZpZXIgKHNlcnZlciBvbmx5KSAqL1xudmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18gPSBudWxsXG52YXIgQ29tcG9uZW50ID0gbm9ybWFsaXplQ29tcG9uZW50KFxuICBfX3Z1ZV9zY3JpcHRfXyxcbiAgX192dWVfdGVtcGxhdGVfXyxcbiAgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fLFxuICBfX3Z1ZV9zdHlsZXNfXyxcbiAgX192dWVfc2NvcGVJZF9fLFxuICBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fXG4pXG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudC5leHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3BhY2thZ2VzL3FyY29kZS9zcmMvcXJjb2RlLnZ1ZVxuLy8gbW9kdWxlIGlkID0gMTA3XG4vLyBtb2R1bGUgY2h1bmtzID0gNDggNTYiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///107\n')},108:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.drawQrcode = drawQrcode;\n\nvar _qrcode = __webpack_require__(109);\n\nvar _qrcode2 = _interopRequireDefault(_qrcode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createQRCode(text, level, version, quiet) {\n  var qr = {};\n\n  var vqr = (0, _qrcode2.default)(version, level);\n  vqr.addData(text);\n  vqr.make();\n\n  quiet = quiet || 0;\n\n  var qrModuleCount = vqr.getModuleCount();\n  var quietModuleCount = vqr.getModuleCount() + 2 * quiet;\n\n  function isDark(row, col) {\n    row -= quiet;\n    col -= quiet;\n\n    if (row < 0 || row >= qrModuleCount || col < 0 || col >= qrModuleCount) {\n      return false;\n    }\n    return vqr.isDark(row, col);\n  }\n\n  function addBlank(l, t, r, b) {\n    var prevIsDark = qr.isDark;\n    var moduleSize = 1 / quietModuleCount;\n\n    qr.isDark = function (row, col) {\n      var ml = col * moduleSize;\n      var mt = row * moduleSize;\n      var mr = ml + moduleSize;\n      var mb = mt + moduleSize;\n\n      return prevIsDark(row, col) && (l > mr || ml > r || t > mb || mt > b);\n    };\n  }\n\n  qr.text = text;\n  qr.level = level;\n  qr.version = version;\n  qr.moduleCount = quietModuleCount;\n  qr.isDark = isDark;\n  qr.addBlank = addBlank;\n\n  return qr;\n}\n\nfunction createMinQRCode(text, level, minVersion, maxVersion, quiet) {\n  minVersion = Math.max(1, minVersion || 1);\n  maxVersion = Math.min(40, maxVersion || 40);\n  for (var version = minVersion; version <= maxVersion; version += 1) {\n    try {\n      return createQRCode(text, level, version, quiet);\n    } catch (err) {}\n  }\n  return undefined;\n}\n\nfunction drawBackgroundLabel(qr, context, settings) {\n  var size = settings.size;\n  var font = 'bold ' + settings.mSize * size + 'px ' + settings.fontname;\n\n  var ctx = document.createElement('canvas').getContext('2d');\n  ctx.font = font;\n\n  var w = ctx.measureText(settings.label).width;\n  var sh = settings.mSize;\n  var sw = w / size;\n  var sl = (1 - sw) * settings.mPosX;\n  var st = (1 - sh) * settings.mPosY;\n  var sr = sl + sw;\n  var sb = st + sh;\n  var pad = 0.01;\n\n  if (settings.mode === 1) {\n    qr.addBlank(0, st - pad, size, sb + pad);\n  } else {\n    qr.addBlank(sl - pad, st - pad, sr + pad, sb + pad);\n  }\n\n  context.fillStyle = settings.fontcolor;\n  context.font = font;\n  context.fillText(settings.label, sl * size, st * size + 0.75 * settings.mSize * size);\n}\n\nfunction drawBackgroundImage(qr, context, settings) {\n  console.log('drawBackgroundImage>>>>');\n  var size = settings.size;\n  var w = settings.image.naturalWidth || 1;\n  var h = settings.image.naturalHeight || 1;\n  var sh = settings.mSize;\n  var sw = sh * w / h;\n  var sl = (1 - sw) * settings.mPosX;\n  var st = (1 - sh) * settings.mPosY;\n  var sr = sl + sw;\n  var sb = st + sh;\n  var pad = 0.01;\n\n  if (settings.mode === 3) {\n    qr.addBlank(0, st - pad, size, sb + pad);\n  } else {\n    qr.addBlank(sl - pad, st - pad, sr + pad, sb + pad);\n  }\n\n  context.drawImage(settings.image, sl * size, st * size, sw * size, sh * size);\n}\n\nfunction drawBackground(qr, context, settings) {\n  if (settings.background) {\n    context.fillStyle = settings.background;\n    context.fillRect(settings.left, settings.top, settings.size, settings.size);\n  }\n\n  var mode = settings.mode;\n  if (mode === 1 || mode === 2) {\n    drawBackgroundLabel(qr, context, settings);\n  } else if (mode === 3 || mode === 4) {\n    drawBackgroundImage(qr, context, settings);\n  }\n}\n\nfunction drawModuleDefault(qr, context, settings, left, top, width, row, col) {\n  if (qr.isDark(row, col)) {\n    context.rect(left, top, width, width);\n  }\n}\n\nfunction drawModuleRoundedDark(ctx, l, t, r, b, rad, nw, ne, se, sw) {\n  if (nw) {\n    ctx.moveTo(l + rad, t);\n  } else {\n    ctx.moveTo(l, t);\n  }\n\n  if (ne) {\n    ctx.lineTo(r - rad, t);\n    ctx.arcTo(r, t, r, b, rad);\n  } else {\n    ctx.lineTo(r, t);\n  }\n\n  if (se) {\n    ctx.lineTo(r, b - rad);\n    ctx.arcTo(r, b, l, b, rad);\n  } else {\n    ctx.lineTo(r, b);\n  }\n\n  if (sw) {\n    ctx.lineTo(l + rad, b);\n    ctx.arcTo(l, b, l, t, rad);\n  } else {\n    ctx.lineTo(l, b);\n  }\n\n  if (nw) {\n    ctx.lineTo(l, t + rad);\n    ctx.arcTo(l, t, r, t, rad);\n  } else {\n    ctx.lineTo(l, t);\n  }\n}\n\nfunction drawModuleRoundendLight(ctx, l, t, r, b, rad, nw, ne, se, sw) {\n  if (nw) {\n    ctx.moveTo(l + rad, t);\n    ctx.lineTo(l, t);\n    ctx.lineTo(l, t + rad);\n    ctx.arcTo(l, t, l + rad, t, rad);\n  }\n\n  if (ne) {\n    ctx.moveTo(r - rad, t);\n    ctx.lineTo(r, t);\n    ctx.lineTo(r, t + rad);\n    ctx.arcTo(r, t, r - rad, t, rad);\n  }\n\n  if (se) {\n    ctx.moveTo(r - rad, b);\n    ctx.lineTo(r, b);\n    ctx.lineTo(r, b - rad);\n    ctx.arcTo(r, b, r - rad, b, rad);\n  }\n\n  if (sw) {\n    ctx.moveTo(l + rad, b);\n    ctx.lineTo(l, b);\n    ctx.lineTo(l, b - rad);\n    ctx.arcTo(l, b, l + rad, b, rad);\n  }\n}\n\nfunction drawModuleRounded(qr, context, settings, left, top, width, row, col) {\n  var isDark = qr.isDark;\n  var right = left + width;\n  var bottom = top + width;\n  var radius = settings.radius * width;\n  var rowT = row - 1;\n  var rowB = row + 1;\n  var colL = col - 1;\n  var colR = col + 1;\n  var center = isDark(row, col);\n  var northwest = isDark(rowT, colL);\n  var north = isDark(rowT, col);\n  var northeast = isDark(rowT, colR);\n  var east = isDark(row, colR);\n  var southeast = isDark(rowB, colR);\n  var south = isDark(rowB, col);\n  var southwest = isDark(rowB, colL);\n  var west = isDark(row, colL);\n\n  if (center) {\n    drawModuleRoundedDark(context, left, top, right, bottom, radius, !north && !west, !north && !east, !south && !east, !south && !west);\n  } else {\n    drawModuleRoundendLight(context, left, top, right, bottom, radius, north && west && northwest, north && east && northeast, south && east && southeast, south && west && southwest);\n  }\n}\n\nfunction drawModules(qr, context, settings) {\n  var moduleCount = qr.moduleCount;\n  var moduleSize = settings.size / moduleCount;\n  var fn = drawModuleDefault;\n  var row;\n  var col;\n\n  if (settings.radius > 0 && settings.radius <= 0.5) {\n    fn = drawModuleRounded;\n  }\n\n  context.beginPath();\n  for (row = 0; row < moduleCount; row += 1) {\n    for (col = 0; col < moduleCount; col += 1) {\n      var l = settings.left + col * moduleSize;\n      var t = settings.top + row * moduleSize;\n      var w = moduleSize;\n\n      fn(qr, context, settings, l, t, w, row, col);\n    }\n  }\n  if (typeof settings.fill !== 'string') {\n    context.strokeStyle = 'rgba(0,0,0,0.5)';\n    context.lineWidth = 2;\n    context.stroke();\n    var prev = context.globalCompositeOperation;\n    context.globalCompositeOperation = 'destination-out';\n    context.fill();\n    context.globalCompositeOperation = prev;\n\n    context.clip();\n    context.drawImage(settings.fill, 0, 0, settings.size, settings.size);\n    context.restore();\n  } else {\n    context.fillStyle = settings.fill;\n    context.fill();\n  }\n}\n\nfunction drawOnCanvas(canvas, settings) {\n  var qr = createMinQRCode(settings.text, settings.ecLevel, settings.minVersion, settings.maxVersion, settings.quiet);\n  if (!qr) {\n    return null;\n  }\n  var context = canvas.getContext('2d');\n  drawBackground(qr, context, settings);\n  drawModules(qr, context, settings);\n}\n\nvar defaults = {\n  render: 'canvas',\n\n  minVersion: 1,\n  maxVersion: 40,\n\n  ecLevel: 'L',\n\n  left: 0,\n  top: 0,\n\n  size: 128,\n\n  fill: '#000',\n\n  background: null,\n\n  text: 'no text',\n\n  radius: 0,\n\n  quiet: 0,\n\n  mode: 0,\n\n  mSize: 0.1,\n  mPosX: 0.5,\n  mPosY: 0.5,\n\n  label: 'no label',\n  fontname: 'sans',\n  fontcolor: '#000',\n\n  image: null\n};\n\nfunction loadImage(src, fn) {\n  var img = new Image();\n  img.onload = function () {\n    fn && fn(img);\n  };\n  img.src = src;\n}\n\nfunction drawQrcode(el, settings) {\n  var ratio = 3;\n  var scaleSize = settings.size * ratio;\n  el.width = scaleSize;\n  el.height = scaleSize;\n  el.style.width = settings.size + 'px';\n  el.style.height = settings.size + 'px';\n  settings.size = scaleSize;\n\n  var opts = Object.assign(defaults, settings);\n  if (settings.image) {\n    opts.mode = 4;\n    loadImage(opts.image, function (img) {\n      opts.image = img;\n      drawOnCanvas(el, opts, ratio);\n    });\n  } else {\n    drawOnCanvas(el, opts, ratio);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL3BhY2thZ2VzL3FyY29kZS9zcmMvcXJ3cmFwLmpzPzkzNzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHFyY29kZSBmcm9tICcuL3FyY29kZS5qcydcblxuLy8gV3JhcHBlciBmb3IgdGhlIG9yaWdpbmFsIFFSIGNvZGUgZ2VuZXJhdG9yLlxuZnVuY3Rpb24gY3JlYXRlUVJDb2RlICh0ZXh0LCBsZXZlbCwgdmVyc2lvbiwgcXVpZXQpIHtcbiAgdmFyIHFyID0ge31cblxuICB2YXIgdnFyID0gcXJjb2RlKHZlcnNpb24sIGxldmVsKVxuICB2cXIuYWRkRGF0YSh0ZXh0KVxuICB2cXIubWFrZSgpXG5cbiAgcXVpZXQgPSBxdWlldCB8fCAwXG5cbiAgdmFyIHFyTW9kdWxlQ291bnQgPSB2cXIuZ2V0TW9kdWxlQ291bnQoKVxuICB2YXIgcXVpZXRNb2R1bGVDb3VudCA9IHZxci5nZXRNb2R1bGVDb3VudCgpICsgMiAqIHF1aWV0XG5cbiAgZnVuY3Rpb24gaXNEYXJrIChyb3csIGNvbCkge1xuICAgIHJvdyAtPSBxdWlldFxuICAgIGNvbCAtPSBxdWlldFxuXG4gICAgaWYgKHJvdyA8IDAgfHwgcm93ID49IHFyTW9kdWxlQ291bnQgfHwgY29sIDwgMCB8fCBjb2wgPj0gcXJNb2R1bGVDb3VudCkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICAgIHJldHVybiB2cXIuaXNEYXJrKHJvdywgY29sKVxuICB9XG5cbiAgZnVuY3Rpb24gYWRkQmxhbmsgKGwsIHQsIHIsIGIpIHtcbiAgICB2YXIgcHJldklzRGFyayA9IHFyLmlzRGFya1xuICAgIHZhciBtb2R1bGVTaXplID0gMSAvIHF1aWV0TW9kdWxlQ291bnRcblxuICAgIHFyLmlzRGFyayA9IGZ1bmN0aW9uIChyb3csIGNvbCkge1xuICAgICAgdmFyIG1sID0gY29sICogbW9kdWxlU2l6ZVxuICAgICAgdmFyIG10ID0gcm93ICogbW9kdWxlU2l6ZVxuICAgICAgdmFyIG1yID0gbWwgKyBtb2R1bGVTaXplXG4gICAgICB2YXIgbWIgPSBtdCArIG1vZHVsZVNpemVcblxuICAgICAgcmV0dXJuIHByZXZJc0Rhcmsocm93LCBjb2wpICYmIChsID4gbXIgfHwgbWwgPiByIHx8IHQgPiBtYiB8fCBtdCA+IGIpXG4gICAgfVxuICB9XG5cbiAgcXIudGV4dCA9IHRleHRcbiAgcXIubGV2ZWwgPSBsZXZlbFxuICBxci52ZXJzaW9uID0gdmVyc2lvblxuICBxci5tb2R1bGVDb3VudCA9IHF1aWV0TW9kdWxlQ291bnRcbiAgcXIuaXNEYXJrID0gaXNEYXJrXG4gIHFyLmFkZEJsYW5rID0gYWRkQmxhbmtcblxuICByZXR1cm4gcXJcbn1cblxuLy8gUmV0dXJucyBhIG1pbmltYWwgUVIgY29kZSBmb3IgdGhlIGdpdmVuIHRleHQgc3RhcnRpbmcgd2l0aCB2ZXJzaW9uIGBtaW5WZXJzaW9uYC5cbi8vIFJldHVybnMgYHVuZGVmaW5lZGAgaWYgYHRleHRgIGlzIHRvbyBsb25nIHRvIGJlIGVuY29kZWQgaW4gYG1heFZlcnNpb25gLlxuZnVuY3Rpb24gY3JlYXRlTWluUVJDb2RlICh0ZXh0LCBsZXZlbCwgbWluVmVyc2lvbiwgbWF4VmVyc2lvbiwgcXVpZXQpIHtcbiAgbWluVmVyc2lvbiA9IE1hdGgubWF4KDEsIG1pblZlcnNpb24gfHwgMSlcbiAgbWF4VmVyc2lvbiA9IE1hdGgubWluKDQwLCBtYXhWZXJzaW9uIHx8IDQwKVxuICBmb3IgKHZhciB2ZXJzaW9uID0gbWluVmVyc2lvbjsgdmVyc2lvbiA8PSBtYXhWZXJzaW9uOyB2ZXJzaW9uICs9IDEpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGNyZWF0ZVFSQ29kZSh0ZXh0LCBsZXZlbCwgdmVyc2lvbiwgcXVpZXQpXG4gICAgfSBjYXRjaCAoZXJyKSB7IC8qIGVtcHR5ICovIH1cbiAgfVxuICByZXR1cm4gdW5kZWZpbmVkXG59XG5cbmZ1bmN0aW9uIGRyYXdCYWNrZ3JvdW5kTGFiZWwgKHFyLCBjb250ZXh0LCBzZXR0aW5ncykge1xuICB2YXIgc2l6ZSA9IHNldHRpbmdzLnNpemVcbiAgdmFyIGZvbnQgPSAnYm9sZCAnICsgc2V0dGluZ3MubVNpemUgKiBzaXplICsgJ3B4ICcgKyBzZXR0aW5ncy5mb250bmFtZVxuXG4gIHZhciBjdHggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKS5nZXRDb250ZXh0KCcyZCcpXG4gIGN0eC5mb250ID0gZm9udFxuXG4gIHZhciB3ID0gY3R4Lm1lYXN1cmVUZXh0KHNldHRpbmdzLmxhYmVsKS53aWR0aFxuICB2YXIgc2ggPSBzZXR0aW5ncy5tU2l6ZVxuICB2YXIgc3cgPSB3IC8gc2l6ZVxuICB2YXIgc2wgPSAoMSAtIHN3KSAqIHNldHRpbmdzLm1Qb3NYXG4gIHZhciBzdCA9ICgxIC0gc2gpICogc2V0dGluZ3MubVBvc1lcbiAgdmFyIHNyID0gc2wgKyBzd1xuICB2YXIgc2IgPSBzdCArIHNoXG4gIHZhciBwYWQgPSAwLjAxXG5cbiAgaWYgKHNldHRpbmdzLm1vZGUgPT09IDEpIHtcbiAgICAgICAgLy8gU3RyaXBcbiAgICBxci5hZGRCbGFuaygwLCBzdCAtIHBhZCwgc2l6ZSwgc2IgKyBwYWQpXG4gIH0gZWxzZSB7XG4gICAgICAgIC8vIEJveFxuICAgIHFyLmFkZEJsYW5rKHNsIC0gcGFkLCBzdCAtIHBhZCwgc3IgKyBwYWQsIHNiICsgcGFkKVxuICB9XG5cbiAgY29udGV4dC5maWxsU3R5bGUgPSBzZXR0aW5ncy5mb250Y29sb3JcbiAgY29udGV4dC5mb250ID0gZm9udFxuICBjb250ZXh0LmZpbGxUZXh0KHNldHRpbmdzLmxhYmVsLCBzbCAqIHNpemUsIHN0ICogc2l6ZSArIDAuNzUgKiBzZXR0aW5ncy5tU2l6ZSAqIHNpemUpXG59XG5cbmZ1bmN0aW9uIGRyYXdCYWNrZ3JvdW5kSW1hZ2UgKHFyLCBjb250ZXh0LCBzZXR0aW5ncykge1xuICBjb25zb2xlLmxvZygnZHJhd0JhY2tncm91bmRJbWFnZT4+Pj4nKVxuICB2YXIgc2l6ZSA9IHNldHRpbmdzLnNpemVcbiAgdmFyIHcgPSBzZXR0aW5ncy5pbWFnZS5uYXR1cmFsV2lkdGggfHwgMVxuICB2YXIgaCA9IHNldHRpbmdzLmltYWdlLm5hdHVyYWxIZWlnaHQgfHwgMVxuICB2YXIgc2ggPSBzZXR0aW5ncy5tU2l6ZVxuICB2YXIgc3cgPSBzaCAqIHcgLyBoXG4gIHZhciBzbCA9ICgxIC0gc3cpICogc2V0dGluZ3MubVBvc1hcbiAgdmFyIHN0ID0gKDEgLSBzaCkgKiBzZXR0aW5ncy5tUG9zWVxuICB2YXIgc3IgPSBzbCArIHN3XG4gIHZhciBzYiA9IHN0ICsgc2hcbiAgdmFyIHBhZCA9IDAuMDFcblxuICBpZiAoc2V0dGluZ3MubW9kZSA9PT0gMykge1xuICAgICAgICAvLyBTdHJpcFxuICAgIHFyLmFkZEJsYW5rKDAsIHN0IC0gcGFkLCBzaXplLCBzYiArIHBhZClcbiAgfSBlbHNlIHtcbiAgICAgICAgLy8gQm94XG4gICAgcXIuYWRkQmxhbmsoc2wgLSBwYWQsIHN0IC0gcGFkLCBzciArIHBhZCwgc2IgKyBwYWQpXG4gIH1cblxuICBjb250ZXh0LmRyYXdJbWFnZShzZXR0aW5ncy5pbWFnZSwgc2wgKiBzaXplLCBzdCAqIHNpemUsIHN3ICogc2l6ZSwgc2ggKiBzaXplKVxufVxuXG5mdW5jdGlvbiBkcmF3QmFja2dyb3VuZCAocXIsIGNvbnRleHQsIHNldHRpbmdzKSB7XG4gIGlmIChzZXR0aW5ncy5iYWNrZ3JvdW5kKSB7XG4gICAgY29udGV4dC5maWxsU3R5bGUgPSBzZXR0aW5ncy5iYWNrZ3JvdW5kXG4gICAgY29udGV4dC5maWxsUmVjdChzZXR0aW5ncy5sZWZ0LCBzZXR0aW5ncy50b3AsIHNldHRpbmdzLnNpemUsIHNldHRpbmdzLnNpemUpXG4gIH1cblxuICB2YXIgbW9kZSA9IHNldHRpbmdzLm1vZGVcbiAgaWYgKG1vZGUgPT09IDEgfHwgbW9kZSA9PT0gMikge1xuICAgIGRyYXdCYWNrZ3JvdW5kTGFiZWwocXIsIGNvbnRleHQsIHNldHRpbmdzKVxuICB9IGVsc2UgaWYgKG1vZGUgPT09IDMgfHwgbW9kZSA9PT0gNCkge1xuICAgIGRyYXdCYWNrZ3JvdW5kSW1hZ2UocXIsIGNvbnRleHQsIHNldHRpbmdzKVxuICB9XG59XG5cbmZ1bmN0aW9uIGRyYXdNb2R1bGVEZWZhdWx0IChxciwgY29udGV4dCwgc2V0dGluZ3MsIGxlZnQsIHRvcCwgd2lkdGgsIHJvdywgY29sKSB7XG4gIGlmIChxci5pc0Rhcmsocm93LCBjb2wpKSB7XG4gICAgY29udGV4dC5yZWN0KGxlZnQsIHRvcCwgd2lkdGgsIHdpZHRoKVxuICB9XG59XG5cbmZ1bmN0aW9uIGRyYXdNb2R1bGVSb3VuZGVkRGFyayAoY3R4LCBsLCB0LCByLCBiLCByYWQsIG53LCBuZSwgc2UsIHN3KSB7XG4gIGlmIChudykge1xuICAgIGN0eC5tb3ZlVG8obCArIHJhZCwgdClcbiAgfSBlbHNlIHtcbiAgICBjdHgubW92ZVRvKGwsIHQpXG4gIH1cblxuICBpZiAobmUpIHtcbiAgICBjdHgubGluZVRvKHIgLSByYWQsIHQpXG4gICAgY3R4LmFyY1RvKHIsIHQsIHIsIGIsIHJhZClcbiAgfSBlbHNlIHtcbiAgICBjdHgubGluZVRvKHIsIHQpXG4gIH1cblxuICBpZiAoc2UpIHtcbiAgICBjdHgubGluZVRvKHIsIGIgLSByYWQpXG4gICAgY3R4LmFyY1RvKHIsIGIsIGwsIGIsIHJhZClcbiAgfSBlbHNlIHtcbiAgICBjdHgubGluZVRvKHIsIGIpXG4gIH1cblxuICBpZiAoc3cpIHtcbiAgICBjdHgubGluZVRvKGwgKyByYWQsIGIpXG4gICAgY3R4LmFyY1RvKGwsIGIsIGwsIHQsIHJhZClcbiAgfSBlbHNlIHtcbiAgICBjdHgubGluZVRvKGwsIGIpXG4gIH1cblxuICBpZiAobncpIHtcbiAgICBjdHgubGluZVRvKGwsIHQgKyByYWQpXG4gICAgY3R4LmFyY1RvKGwsIHQsIHIsIHQsIHJhZClcbiAgfSBlbHNlIHtcbiAgICBjdHgubGluZVRvKGwsIHQpXG4gIH1cbn1cblxuZnVuY3Rpb24gZHJhd01vZHVsZVJvdW5kZW5kTGlnaHQgKGN0eCwgbCwgdCwgciwgYiwgcmFkLCBudywgbmUsIHNlLCBzdykge1xuICBpZiAobncpIHtcbiAgICBjdHgubW92ZVRvKGwgKyByYWQsIHQpXG4gICAgY3R4LmxpbmVUbyhsLCB0KVxuICAgIGN0eC5saW5lVG8obCwgdCArIHJhZClcbiAgICBjdHguYXJjVG8obCwgdCwgbCArIHJhZCwgdCwgcmFkKVxuICB9XG5cbiAgaWYgKG5lKSB7XG4gICAgY3R4Lm1vdmVUbyhyIC0gcmFkLCB0KVxuICAgIGN0eC5saW5lVG8ociwgdClcbiAgICBjdHgubGluZVRvKHIsIHQgKyByYWQpXG4gICAgY3R4LmFyY1RvKHIsIHQsIHIgLSByYWQsIHQsIHJhZClcbiAgfVxuXG4gIGlmIChzZSkge1xuICAgIGN0eC5tb3ZlVG8ociAtIHJhZCwgYilcbiAgICBjdHgubGluZVRvKHIsIGIpXG4gICAgY3R4LmxpbmVUbyhyLCBiIC0gcmFkKVxuICAgIGN0eC5hcmNUbyhyLCBiLCByIC0gcmFkLCBiLCByYWQpXG4gIH1cblxuICBpZiAoc3cpIHtcbiAgICBjdHgubW92ZVRvKGwgKyByYWQsIGIpXG4gICAgY3R4LmxpbmVUbyhsLCBiKVxuICAgIGN0eC5saW5lVG8obCwgYiAtIHJhZClcbiAgICBjdHguYXJjVG8obCwgYiwgbCArIHJhZCwgYiwgcmFkKVxuICB9XG59XG5cbmZ1bmN0aW9uIGRyYXdNb2R1bGVSb3VuZGVkIChxciwgY29udGV4dCwgc2V0dGluZ3MsIGxlZnQsIHRvcCwgd2lkdGgsIHJvdywgY29sKSB7XG4gIHZhciBpc0RhcmsgPSBxci5pc0RhcmtcbiAgdmFyIHJpZ2h0ID0gbGVmdCArIHdpZHRoXG4gIHZhciBib3R0b20gPSB0b3AgKyB3aWR0aFxuICB2YXIgcmFkaXVzID0gc2V0dGluZ3MucmFkaXVzICogd2lkdGhcbiAgdmFyIHJvd1QgPSByb3cgLSAxXG4gIHZhciByb3dCID0gcm93ICsgMVxuICB2YXIgY29sTCA9IGNvbCAtIDFcbiAgdmFyIGNvbFIgPSBjb2wgKyAxXG4gIHZhciBjZW50ZXIgPSBpc0Rhcmsocm93LCBjb2wpXG4gIHZhciBub3J0aHdlc3QgPSBpc0Rhcmsocm93VCwgY29sTClcbiAgdmFyIG5vcnRoID0gaXNEYXJrKHJvd1QsIGNvbClcbiAgdmFyIG5vcnRoZWFzdCA9IGlzRGFyayhyb3dULCBjb2xSKVxuICB2YXIgZWFzdCA9IGlzRGFyayhyb3csIGNvbFIpXG4gIHZhciBzb3V0aGVhc3QgPSBpc0Rhcmsocm93QiwgY29sUilcbiAgdmFyIHNvdXRoID0gaXNEYXJrKHJvd0IsIGNvbClcbiAgdmFyIHNvdXRod2VzdCA9IGlzRGFyayhyb3dCLCBjb2xMKVxuICB2YXIgd2VzdCA9IGlzRGFyayhyb3csIGNvbEwpXG5cbiAgaWYgKGNlbnRlcikge1xuICAgIGRyYXdNb2R1bGVSb3VuZGVkRGFyayhjb250ZXh0LCBsZWZ0LCB0b3AsIHJpZ2h0LCBib3R0b20sIHJhZGl1cywgIW5vcnRoICYmICF3ZXN0LCAhbm9ydGggJiYgIWVhc3QsICFzb3V0aCAmJiAhZWFzdCwgIXNvdXRoICYmICF3ZXN0KVxuICB9IGVsc2Uge1xuICAgIGRyYXdNb2R1bGVSb3VuZGVuZExpZ2h0KGNvbnRleHQsIGxlZnQsIHRvcCwgcmlnaHQsIGJvdHRvbSwgcmFkaXVzLCBub3J0aCAmJiB3ZXN0ICYmIG5vcnRod2VzdCwgbm9ydGggJiYgZWFzdCAmJiBub3J0aGVhc3QsIHNvdXRoICYmIGVhc3QgJiYgc291dGhlYXN0LCBzb3V0aCAmJiB3ZXN0ICYmIHNvdXRod2VzdClcbiAgfVxufVxuXG5mdW5jdGlvbiBkcmF3TW9kdWxlcyAocXIsIGNvbnRleHQsIHNldHRpbmdzKSB7XG4gIHZhciBtb2R1bGVDb3VudCA9IHFyLm1vZHVsZUNvdW50XG4gIHZhciBtb2R1bGVTaXplID0gc2V0dGluZ3Muc2l6ZSAvIG1vZHVsZUNvdW50XG4gIHZhciBmbiA9IGRyYXdNb2R1bGVEZWZhdWx0XG4gIHZhciByb3dcbiAgdmFyIGNvbFxuXG4gIGlmIChzZXR0aW5ncy5yYWRpdXMgPiAwICYmIHNldHRpbmdzLnJhZGl1cyA8PSAwLjUpIHtcbiAgICBmbiA9IGRyYXdNb2R1bGVSb3VuZGVkXG4gIH1cblxuICBjb250ZXh0LmJlZ2luUGF0aCgpXG4gIGZvciAocm93ID0gMDsgcm93IDwgbW9kdWxlQ291bnQ7IHJvdyArPSAxKSB7XG4gICAgZm9yIChjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudDsgY29sICs9IDEpIHtcbiAgICAgIHZhciBsID0gc2V0dGluZ3MubGVmdCArIGNvbCAqIG1vZHVsZVNpemVcbiAgICAgIHZhciB0ID0gc2V0dGluZ3MudG9wICsgcm93ICogbW9kdWxlU2l6ZVxuICAgICAgdmFyIHcgPSBtb2R1bGVTaXplXG5cbiAgICAgIGZuKHFyLCBjb250ZXh0LCBzZXR0aW5ncywgbCwgdCwgdywgcm93LCBjb2wpXG4gICAgfVxuICB9XG4gIGlmICh0eXBlb2YgKHNldHRpbmdzLmZpbGwpICE9PSAnc3RyaW5nJykge1xuICAgIGNvbnRleHQuc3Ryb2tlU3R5bGUgPSAncmdiYSgwLDAsMCwwLjUpJ1xuICAgIGNvbnRleHQubGluZVdpZHRoID0gMlxuICAgIGNvbnRleHQuc3Ryb2tlKClcbiAgICB2YXIgcHJldiA9IGNvbnRleHQuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uXG4gICAgY29udGV4dC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb24gPSAnZGVzdGluYXRpb24tb3V0J1xuICAgIGNvbnRleHQuZmlsbCgpXG4gICAgY29udGV4dC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb24gPSBwcmV2XG5cbiAgICBjb250ZXh0LmNsaXAoKVxuICAgIGNvbnRleHQuZHJhd0ltYWdlKHNldHRpbmdzLmZpbGwsIDAsIDAsIHNldHRpbmdzLnNpemUsIHNldHRpbmdzLnNpemUpXG4gICAgY29udGV4dC5yZXN0b3JlKClcbiAgfSBlbHNlIHtcbiAgICBjb250ZXh0LmZpbGxTdHlsZSA9IHNldHRpbmdzLmZpbGxcbiAgICBjb250ZXh0LmZpbGwoKVxuICB9XG59XG5cbi8vIERyYXdzIFFSIGNvZGUgdG8gdGhlIGdpdmVuIGBjYW52YXNgIGFuZCByZXR1cm5zIGl0LlxuZnVuY3Rpb24gZHJhd09uQ2FudmFzIChjYW52YXMsIHNldHRpbmdzKSB7XG4gIHZhciBxciA9IGNyZWF0ZU1pblFSQ29kZShzZXR0aW5ncy50ZXh0LCBzZXR0aW5ncy5lY0xldmVsLCBzZXR0aW5ncy5taW5WZXJzaW9uLCBzZXR0aW5ncy5tYXhWZXJzaW9uLCBzZXR0aW5ncy5xdWlldClcbiAgaWYgKCFxcikge1xuICAgIHJldHVybiBudWxsXG4gIH1cbiAgdmFyIGNvbnRleHQgPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKVxuICBkcmF3QmFja2dyb3VuZChxciwgY29udGV4dCwgc2V0dGluZ3MpXG4gIGRyYXdNb2R1bGVzKHFyLCBjb250ZXh0LCBzZXR0aW5ncylcbn1cblxuLy8gUGx1Z2luXG4vLyA9PT09PT1cblxuLy8gRGVmYXVsdCBzZXR0aW5nc1xuLy8gLS0tLS0tLS0tLS0tLS0tLVxudmFyIGRlZmF1bHRzID0ge1xuICAgIC8vIHJlbmRlciBtZXRob2Q6IGAnY2FudmFzJ2AsIGAnaW1hZ2UnYCBvciBgJ2RpdidgXG4gIHJlbmRlcjogJ2NhbnZhcycsXG5cbiAgICAvLyB2ZXJzaW9uIHJhbmdlIHNvbWV3aGVyZSBpbiAxIC4uIDQwXG4gIG1pblZlcnNpb246IDEsXG4gIG1heFZlcnNpb246IDQwLFxuXG4gICAgLy8gZXJyb3IgY29ycmVjdGlvbiBsZXZlbDogYCdMJ2AsIGAnTSdgLCBgJ1EnYCBvciBgJ0gnYFxuICBlY0xldmVsOiAnTCcsXG5cbiAgICAvLyBvZmZzZXQgaW4gcGl4ZWwgaWYgZHJhd24gb250byBleGlzdGluZyBjYW52YXNcbiAgbGVmdDogMCxcbiAgdG9wOiAwLFxuXG4gICAgLy8gc2l6ZSBpbiBwaXhlbFxuICBzaXplOiAxMjgsXG5cbiAgICAvLyBjb2RlIGNvbG9yIG9yIGltYWdlIGVsZW1lbnRcbiAgZmlsbDogJyMwMDAnLFxuXG4gICAgLy8gYmFja2dyb3VuZCBjb2xvciBvciBpbWFnZSBlbGVtZW50LCBgbnVsbGAgZm9yIHRyYW5zcGFyZW50IGJhY2tncm91bmRcbiAgYmFja2dyb3VuZDogbnVsbCxcblxuICAgIC8vIGNvbnRlbnRcbiAgdGV4dDogJ25vIHRleHQnLFxuXG4gICAgLy8gY29ybmVyIHJhZGl1cyByZWxhdGl2ZSB0byBtb2R1bGUgd2lkdGg6IDAuMCAuLiAwLjVcbiAgcmFkaXVzOiAwLFxuXG4gICAgLy8gcXVpZXQgem9uZSBpbiBtb2R1bGVzXG4gIHF1aWV0OiAwLFxuXG4gICAgLy8gbW9kZXNcbiAgICAvLyAwOiBub3JtYWxcbiAgICAvLyAxOiBsYWJlbCBzdHJpcFxuICAgIC8vIDI6IGxhYmVsIGJveFxuICAgIC8vIDM6IGltYWdlIHN0cmlwXG4gICAgLy8gNDogaW1hZ2UgYm94XG4gIG1vZGU6IDAsXG5cbiAgbVNpemU6IDAuMSxcbiAgbVBvc1g6IDAuNSxcbiAgbVBvc1k6IDAuNSxcblxuICBsYWJlbDogJ25vIGxhYmVsJyxcbiAgZm9udG5hbWU6ICdzYW5zJyxcbiAgZm9udGNvbG9yOiAnIzAwMCcsXG5cbiAgaW1hZ2U6IG51bGxcbn1cblxuZnVuY3Rpb24gbG9hZEltYWdlIChzcmMsIGZuKSB7XG4gIGxldCBpbWcgPSBuZXcgSW1hZ2UoKVxuICBpbWcub25sb2FkID0gKCkgPT4ge1xuICAgIGZuICYmIGZuKGltZylcbiAgfVxuICBpbWcuc3JjID0gc3JjXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkcmF3UXJjb2RlIChlbCwgc2V0dGluZ3MpIHtcbiAgbGV0IHJhdGlvID0gM1xuICBsZXQgc2NhbGVTaXplID0gc2V0dGluZ3Muc2l6ZSAqIHJhdGlvXG4gIGVsLndpZHRoID0gc2NhbGVTaXplXG4gIGVsLmhlaWdodCA9IHNjYWxlU2l6ZVxuICBlbC5zdHlsZS53aWR0aCA9IHNldHRpbmdzLnNpemUgKyAncHgnXG4gIGVsLnN0eWxlLmhlaWdodCA9IHNldHRpbmdzLnNpemUgKyAncHgnXG4gIHNldHRpbmdzLnNpemUgPSBzY2FsZVNpemVcblxuICBsZXQgb3B0cyA9IE9iamVjdC5hc3NpZ24oZGVmYXVsdHMsIHNldHRpbmdzKVxuICBpZiAoc2V0dGluZ3MuaW1hZ2UpIHtcbiAgICBvcHRzLm1vZGUgPSA0XG4gICAgbG9hZEltYWdlKG9wdHMuaW1hZ2UsIChpbWcpID0+IHtcbiAgICAgIG9wdHMuaW1hZ2UgPSBpbWdcbiAgICAgIGRyYXdPbkNhbnZhcyhlbCwgb3B0cywgcmF0aW8pXG4gICAgfSlcbiAgfSBlbHNlIHtcbiAgICBkcmF3T25DYW52YXMoZWwsIG9wdHMsIHJhdGlvKVxuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gcGFja2FnZXMvcXJjb2RlL3NyYy9xcndyYXAuanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBc1ZBO0FBQ0E7QUF2VkE7QUFDQTs7Ozs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWpEQTtBQUNBO0FBbURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///108\n")},109:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\nvar qrcode = function () {\n  var qrcode = function qrcode(typeNumber, errorCorrectLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectLevel = QRErrorCorrectLevel[errorCorrectLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = new Array();\n\n    var _this = {};\n\n    var makeImpl = function makeImpl(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function (moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function setupPositionProbePattern(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function getBestMaskPattern() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function setupTimingPattern() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = r % 2 == 0;\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = c % 2 == 0;\n      }\n    };\n\n    var setupPositionAdjustPattern = function setupPositionAdjustPattern() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function setupTypeNumber(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = !test && (bits >> i & 1) == 1;\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = !test && (bits >> i & 1) == 1;\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function setupTypeInfo(test, maskPattern) {\n\n      var data = _errorCorrectLevel << 3 | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = !test && (bits >> i & 1) == 1;\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = !test && (bits >> i & 1) == 1;\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      _modules[_moduleCount - 8][8] = !test;\n    };\n\n    var mapData = function mapData(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function createBytes(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function createData(typeNumber, errorCorrectLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber));\n        data.write(buffer);\n      }\n\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw new Error('code length overflow. (' + buffer.getLengthInBits() + '>' + totalDataCount * 8 + ')');\n      }\n\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function (data) {\n      var newData = qr8BitByte(data);\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function (row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw new Error(row + ',' + col);\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function () {\n      return _moduleCount;\n    };\n\n    _this.make = function () {\n      makeImpl(false, getBestMaskPattern());\n    };\n\n    _this.createTableTag = function (cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = typeof margin == 'undefined' ? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c) ? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createImgTag = function (cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = typeof margin == 'undefined' ? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createImgTag(size, size, function (x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor((x - min) / cellSize);\n          var r = Math.floor((y - min) / cellSize);\n          return _this.isDark(r, c) ? 0 : 1;\n        } else {\n          return 1;\n        }\n      });\n    };\n\n    return _this;\n  };\n\n  qrcode.stringToBytes = function (s) {\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i = 0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);else if (charcode < 0x800) {\n          utf8.push(0xc0 | charcode >> 6, 0x80 | charcode & 0x3f);\n        } else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | charcode >> 12, 0x80 | charcode >> 6 & 0x3f, 0x80 | charcode & 0x3f);\n        } else {\n            i++;\n\n            charcode = 0x10000 + ((charcode & 0x3ff) << 10 | str.charCodeAt(i) & 0x3ff);\n            utf8.push(0xf0 | charcode >> 18, 0x80 | charcode >> 12 & 0x3f, 0x80 | charcode >> 6 & 0x3f, 0x80 | charcode & 0x3f);\n          }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n  qrcode.createStringToBytes = function (unicodeData, numChars) {\n\n    var unicodeMap = function () {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function read() {\n        var b = bin.read();\n        if (b == -1) throw new Error();\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode(b0 << 8 | b1);\n        var v = b2 << 8 | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw new Error(count + ' != ' + numChars);\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function (s) {\n      var bytes = new Array();\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ((b & 0xff) == b) {\n              bytes.push(b);\n            } else {\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  var QRMode = {\n    MODE_NUMBER: 1 << 0,\n    MODE_ALPHA_NUM: 1 << 1,\n    MODE_8BIT_BYTE: 1 << 2,\n    MODE_KANJI: 1 << 3\n  };\n\n  var QRErrorCorrectLevel = {\n    L: 1,\n    M: 0,\n    Q: 3,\n    H: 2\n  };\n\n  var QRMaskPattern = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7\n  };\n\n  var QRUtil = function () {\n\n    var PATTERN_POSITION_TABLE = [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]];\n    var G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;\n    var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;\n    var G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;\n\n    var _this = {};\n\n    var getBCHDigit = function getBCHDigit(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function (data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= G15 << getBCHDigit(d) - getBCHDigit(G15);\n      }\n      return (data << 10 | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function (data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= G18 << getBCHDigit(d) - getBCHDigit(G18);\n      }\n      return data << 12 | d;\n    };\n\n    _this.getPatternPosition = function (typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function (maskPattern) {\n\n      switch (maskPattern) {\n\n        case QRMaskPattern.PATTERN000:\n          return function (i, j) {\n            return (i + j) % 2 == 0;\n          };\n        case QRMaskPattern.PATTERN001:\n          return function (i, j) {\n            return i % 2 == 0;\n          };\n        case QRMaskPattern.PATTERN010:\n          return function (i, j) {\n            return j % 3 == 0;\n          };\n        case QRMaskPattern.PATTERN011:\n          return function (i, j) {\n            return (i + j) % 3 == 0;\n          };\n        case QRMaskPattern.PATTERN100:\n          return function (i, j) {\n            return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n          };\n        case QRMaskPattern.PATTERN101:\n          return function (i, j) {\n            return i * j % 2 + i * j % 3 == 0;\n          };\n        case QRMaskPattern.PATTERN110:\n          return function (i, j) {\n            return (i * j % 2 + i * j % 3) % 2 == 0;\n          };\n        case QRMaskPattern.PATTERN111:\n          return function (i, j) {\n            return (i * j % 3 + (i + j) % 2) % 2 == 0;\n          };\n\n        default:\n          throw new Error('bad maskPattern:' + maskPattern);\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function (errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0));\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function (mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        switch (mode) {\n          case QRMode.MODE_NUMBER:\n            return 10;\n          case QRMode.MODE_ALPHA_NUM:\n            return 9;\n          case QRMode.MODE_8BIT_BYTE:\n            return 8;\n          case QRMode.MODE_KANJI:\n            return 8;\n          default:\n            throw new Error('mode:' + mode);\n        }\n      } else if (type < 27) {\n\n        switch (mode) {\n          case QRMode.MODE_NUMBER:\n            return 12;\n          case QRMode.MODE_ALPHA_NUM:\n            return 11;\n          case QRMode.MODE_8BIT_BYTE:\n            return 16;\n          case QRMode.MODE_KANJI:\n            return 10;\n          default:\n            throw new Error('mode:' + mode);\n        }\n      } else if (type < 41) {\n\n        switch (mode) {\n          case QRMode.MODE_NUMBER:\n            return 14;\n          case QRMode.MODE_ALPHA_NUM:\n            return 13;\n          case QRMode.MODE_8BIT_BYTE:\n            return 16;\n          case QRMode.MODE_KANJI:\n            return 12;\n          default:\n            throw new Error('mode:' + mode);\n        }\n      } else {\n        throw new Error('type:' + type);\n      }\n    };\n\n    _this.getLostPoint = function (qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c)) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += 3 + sameCount - 5;\n          }\n        }\n      };\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col)) count += 1;\n          if (qrcode.isDark(row + 1, col)) count += 1;\n          if (qrcode.isDark(row, col + 1)) count += 1;\n          if (qrcode.isDark(row + 1, col + 1)) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col) && !qrcode.isDark(row, col + 1) && qrcode.isDark(row, col + 2) && qrcode.isDark(row, col + 3) && qrcode.isDark(row, col + 4) && !qrcode.isDark(row, col + 5) && qrcode.isDark(row, col + 6)) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col) && !qrcode.isDark(row + 1, col) && qrcode.isDark(row + 2, col) && qrcode.isDark(row + 3, col) && qrcode.isDark(row + 4, col) && !qrcode.isDark(row + 5, col) && qrcode.isDark(row + 6, col)) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col)) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  var QRMath = function () {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i]] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function (n) {\n\n      if (n < 1) {\n        throw new Error('glog(' + n + ')');\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function (n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw new Error(num.length + '/' + shift);\n    }\n\n    var _num = function () {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function (index) {\n      return _num[index];\n    };\n\n    _this.getLength = function () {\n      return _num.length;\n    };\n\n    _this.multiply = function (e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i)) + QRMath.glog(e.getAt(j)));\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function (e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0)) - QRMath.glog(e.getAt(0));\n\n      var num = new Array(_this.getLength());\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i)) + ratio);\n      }\n\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  var QRRSBlock = function () {\n\n    var RS_BLOCK_TABLE = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12, 7, 37, 13], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\n\n    var qrRSBlock = function qrRSBlock(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function getRsBlockTable(typeNumber, errorCorrectLevel) {\n\n      switch (errorCorrectLevel) {\n        case QRErrorCorrectLevel.L:\n          return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n        case QRErrorCorrectLevel.M:\n          return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n        case QRErrorCorrectLevel.Q:\n          return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n        case QRErrorCorrectLevel.H:\n          return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n        default:\n          return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw new Error('bad rs block @ typeNumber:' + typeNumber + '/errorCorrectLevel:' + errorCorrectLevel);\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = new Array();\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount));\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  var qrBitBuffer = function qrBitBuffer() {\n\n    var _buffer = new Array();\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function () {\n      return _buffer;\n    };\n\n    _this.getAt = function (index) {\n      var bufIndex = Math.floor(index / 8);\n      return (_buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n    };\n\n    _this.put = function (num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit((num >>> length - i - 1 & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function () {\n      return _length;\n    };\n\n    _this.putBit = function (bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= 0x80 >>> _length % 8;\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  var qr8BitByte = function qr8BitByte(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function () {\n      return _mode;\n    };\n\n    _this.getLength = function (buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function (buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  var byteArrayOutputStream = function byteArrayOutputStream() {\n\n    var _bytes = new Array();\n\n    var _this = {};\n\n    _this.writeByte = function (b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function (i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function (b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function (s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i));\n      }\n    };\n\n    _this.toByteArray = function () {\n      return _bytes;\n    };\n\n    _this.toString = function () {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  var base64EncodeOutputStream = function base64EncodeOutputStream() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function writeEncoded(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f));\n    };\n\n    var encode = function encode(n) {\n      if (n < 0) {} else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw new Error('n:' + n);\n    };\n\n    _this.writeByte = function (n) {\n\n      _buffer = _buffer << 8 | n & 0xff;\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> _buflen - 6);\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function () {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << 6 - _buflen);\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function () {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  var base64DecodeInputStream = function base64DecodeInputStream(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function () {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw new Error('unexpected end of file./' + _buflen);\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/)) {\n          continue;\n        }\n\n        _buffer = _buffer << 6 | decode(c.charCodeAt(0));\n        _buflen += 6;\n      }\n\n      var n = _buffer >>> _buflen - 8 & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function decode(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw new Error('c:' + c);\n      }\n    };\n\n    return _this;\n  };\n\n  var gifImage = function gifImage(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function (x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function (out) {\n\n      out.writeString('GIF87a');\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80);\n      out.writeByte(0);\n      out.writeByte(0);\n\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function bitOutputStream(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function (data, length) {\n\n        if (data >>> length != 0) {\n          throw new Error('length over');\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & (data << _bitLength | _bitBuffer));\n          length -= 8 - _bitLength;\n          data >>>= 8 - _bitLength;\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = data << _bitLength | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function () {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function getLZWRaster(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i));\n      }\n      table.add(String.fromCharCode(clearCode));\n      table.add(String.fromCharCode(endCode));\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c)) {\n\n          s = s + c;\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == 1 << bitLength) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function lzwTable() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function (key) {\n        if (_this.contains(key)) {\n          throw new Error('dup key:' + key);\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function () {\n        return _size;\n      };\n\n      _this.indexOf = function (key) {\n        return _map[key];\n      };\n\n      _this.contains = function (key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createImgTag = function createImgTag(width, height, getPixel, alt) {\n\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y));\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    var img = '';\n    img += '<img';\n    img += ' src=\"';\n    img += 'data:image/gif;base64,';\n    img += base64;\n    img += '\"';\n    img += ' width=\"';\n    img += width;\n    img += '\"';\n    img += ' height=\"';\n    img += height;\n    img += '\"';\n    if (alt) {\n      img += ' alt=\"';\n      img += alt;\n      img += '\"';\n    }\n    img += '/>';\n\n    return img;\n  };\n\n  return qrcode;\n}();\n\nexports.default = qrcode;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///109\n")},110:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{ref:\"canvas\"})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcXJjb2RlL3NyYy9xcmNvZGUudnVlPzRkY2YiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2RpdicsW19jKCdjYW52YXMnLHtyZWY6XCJjYW52YXNcIn0pXSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnZhciBlc0V4cG9ydHMgPSB7IHJlbmRlcjogcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZucyB9XG5leHBvcnQgZGVmYXVsdCBlc0V4cG9ydHNcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlcj97XCJpZFwiOlwiZGF0YS12LTNiZTcxZmM0XCIsXCJoYXNTY29wZWRcIjpmYWxzZSxcImJ1YmxlXCI6e1widHJhbnNmb3Jtc1wiOnt9fX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vcGFja2FnZXMvcXJjb2RlL3NyYy9xcmNvZGUudnVlXG4vLyBtb2R1bGUgaWQgPSAxMTBcbi8vIG1vZHVsZSBjaHVua3MgPSA0OCA1NiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///110\n")},160:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _qrcode = __webpack_require__(106);\n\nvar _qrcode2 = _interopRequireDefault(_qrcode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  components: {\n    'w-qrcode': _qrcode2.default\n  },\n  data: function data() {\n    return {\n      url: location.origin + '/?t=' + Date.now() + '#/demo/Index'\n    };\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL0luZGV4LnZ1ZT82MjAwIl0sInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT48dW5kZWZpbmVkPjxoMT5XVUkgPGEgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS93LXVpL3d1aVwiPjxpbWcgc3JjPVwiaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9naXRodWIvc3RhcnMvdy11aS93dWkuc3ZnP3N0eWxlPXNvY2lhbCZhbXA7bGFiZWw9U3RhclwiIGFsdD1cImdpdGh1YiBzdGFydFwiPjwvYT48L2gxPlxuPHA+PGEgaHJlZj1cImh0dHBzOi8vdHJhdmlzLWNpLm9yZy93bWZlL3d1aVwiPjxpbWcgc3JjPVwiaHR0cHM6Ly90cmF2aXMtY2kub3JnL3dtZmUvd3VpLnN2Zz9icmFuY2g9bWFzdGVyXCIgYWx0PVwiQnVpbGQgU3RhdHVzXCI+PC9hPiA8YSBocmVmPVwiaHR0cHM6Ly9jb3ZlcmFsbHMuaW8vZ2l0aHViL3dtZmUvd3VpP2JyYW5jaD1tYXN0ZXJcIj48aW1nIHNyYz1cImh0dHBzOi8vY292ZXJhbGxzLmlvL3JlcG9zL2dpdGh1Yi93bWZlL3d1aS9iYWRnZS5zdmc/YnJhbmNoPW1hc3RlclwiIGFsdD1cIkNvdmVyYWdlIFN0YXR1c1wiPjwvYT4gPGEgaHJlZj1cImh0dHBzOi8vbnBtanMub3JnL3BhY2thZ2Uvdy11aVwiPjxpbWcgc3JjPVwiaHR0cDovL2ltZy5zaGllbGRzLmlvL25wbS9kbS93LXVpLnN2Z1wiIGFsdD1cIk5QTSBkb3dubG9hZHNcIj48L2E+IDxhIGhyZWY9XCJodHRwczovL25wbWpzLm9yZy9wYWNrYWdlL3ctdWlcIj48aW1nIHNyYz1cImh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZ2l0aHViL2Rvd25sb2Fkcy93LXVpL3d1aS90b3RhbC5zdmdcIiBhbHQ9XCJHaXRodWIgQWxsIFJlbGVhc2VzXCI+PC9hPiA8YSBocmVmPVwiaHR0cHM6Ly9ucG1qcy5vcmcvcGFja2FnZS93LXVpXCI+PGltZyBzcmM9XCJodHRwczovL2ltZy5zaGllbGRzLmlvL25wbS9sL3ctdWkuc3ZnXCIgYWx0PVwiTlBNIGxpY2VuY2VcIj48L2E+IDxhIGhyZWY9XCJodHRwczovL3d3dy5ucG1qcy5vcmcvcGFja2FnZS93LXVpXCI+PGltZyBzcmM9XCJodHRwczovL2ltZy5zaGllbGRzLmlvL25wbS92L3ctdWkuc3ZnXCIgYWx0PVwibnBtIHBhY2thZ2VcIj48L2E+IDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vdy11aS93dWlcIj48aW1nIHNyYz1cImh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZ2l0aHViL3JlbGVhc2Uvdy11aS93dWkuc3ZnXCIgYWx0PVwiR2l0SHViIHJlbGVhc2VcIj48L2E+IDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vdy11aS93dWlcIj48aW1nIHNyYz1cImh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZ2l0aHViL3NlYXJjaC93LXVpL3d1aS9nb3RvLnN2Z1wiIGFsdD1cIkdpdGh1YiBzZWFyY2ggaGl0IGNvdW50ZXJcIj48L2E+IDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vdy11aS93dWlcIj48aW1nIHNyYz1cImh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYml0aG91bmQvZGVwZW5kZW5jaWVzL2dpdGh1Yi93LXVpL3d1aS5zdmdcIiBhbHQ9XCJiaXRIb3VuZFwiPjwvYT48L3A+XG48cD48YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL3ctdWkvd3VpL2lzc3Vlc1wiPjxpbWcgc3JjPVwiaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9naXRodWIvaXNzdWVzL3ctdWkvd3VpLnN2Z1wiIGFsdD1cIkdpdEh1YiBpc3N1ZXNcIj48L2E+IDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vdy11aS93dWkvaXNzdWVzXCI+PGltZyBzcmM9XCJodHRwczovL2ltZy5zaGllbGRzLmlvL2dpdGh1Yi9pc3N1ZXMtY2xvc2VkL3ctdWkvd3VpLnN2Z1wiIGFsdD1cIkdpdEh1YiBjbG9zZWQgaXNzdWVzXCI+PC9hPiA8YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL3ctdWkvd3VpXCI+PGltZyBzcmM9XCJodHRwczovL2ltZy5zaGllbGRzLmlvL2dpdHRlci9yb29tL3ctdWkvd3VpLnN2Z1wiIGFsdD1cIkdpdHRlclwiPjwvYT48L3A+XG48aDE+NTHnu4Tku7Y8L2gxPlxuPGgzPuaJi+acuuaJq+eggeafpeeci+ekuuS+izwvaDM+XG48dGVtcGxhdGU+XG4gIDx3LXFyY29kZSA6dGV4dD1cInVybFwiIDpzaXplPVwiMjU2XCIgaW1hZ2U9XCIvaW1nL3d1aS5wbmdcIj48L3ctcXJjb2RlPlxuPC90ZW1wbGF0ZT5cbjwvdW5kZWZpbmVkPjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG4gIGltcG9ydCBRcmNvZGUgZnJvbSAncGFja2FnZXMvcXJjb2RlJ1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgY29tcG9uZW50czoge1xuICAgICAgJ3ctcXJjb2RlJzogUXJjb2RlXG4gICAgfSxcbiAgICBkYXRhICgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHVybDogbG9jYXRpb24ub3JpZ2luICsgJy8/dD0nICsgRGF0ZS5ub3coKSArICcjL2RlbW8vSW5kZXgnXG4gICAgICB9XG4gICAgfVxuICB9XG48L3NjcmlwdD5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gSW5kZXgudnVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFXQTtBQUNBOzs7Ozs7O0FBR0E7QUFEQTtBQUdBOztBQUVBO0FBREE7QUFHQTtBQVJBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///160\n")},371:function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(372);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzcxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vZG9jcy9jb21wb25lbnRzL0luZGV4Lm1kPzQ1Y2YiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiISF2dWUtbG9hZGVyIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbWFya2Rvd24tbG9hZGVyL2xpYi9tYXJrZG93bi1jb21waWxlci5qcz9yYXchLi9JbmRleC5tZFwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2RvY3MvY29tcG9uZW50cy9JbmRleC5tZFxuLy8gbW9kdWxlIGlkID0gMzcxXG4vLyBtb2R1bGUgY2h1bmtzID0gNDgiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///371\n")},372:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('Object.defineProperty(__webpack_exports__, "__esModule", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_node_modules_vue_markdown_loader_lib_markdown_compiler_js_raw_Index_md__ = __webpack_require__(160);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_node_modules_vue_markdown_loader_lib_markdown_compiler_js_raw_Index_md___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_node_modules_vue_markdown_loader_lib_markdown_compiler_js_raw_Index_md__);\n/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_node_modules_vue_markdown_loader_lib_markdown_compiler_js_raw_Index_md__) if(__WEBPACK_IMPORT_KEY__ !== \'default\') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_node_modules_vue_markdown_loader_lib_markdown_compiler_js_raw_Index_md__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d43a1e7a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_node_modules_vue_markdown_loader_lib_markdown_compiler_js_raw_Index_md__ = __webpack_require__(373);\nvar normalizeComponent = __webpack_require__(3)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_node_modules_vue_markdown_loader_lib_markdown_compiler_js_raw_Index_md___default.a,\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d43a1e7a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_node_modules_vue_markdown_loader_lib_markdown_compiler_js_raw_Index_md__["a" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__["default"] = (Component.exports);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzcyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vZG9jcy9jb21wb25lbnRzL0luZGV4Lm1kPzQxZjQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG5vcm1hbGl6ZUNvbXBvbmVudCA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2NvbXBvbmVudC1ub3JtYWxpemVyXCIpXG4vKiBzY3JpcHQgKi9cbmV4cG9ydCAqIGZyb20gXCIhIWJhYmVsLWxvYWRlciEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLW1hcmtkb3duLWxvYWRlci9saWIvbWFya2Rvd24tY29tcGlsZXIuanM/cmF3IS4vSW5kZXgubWRcIlxuaW1wb3J0IF9fdnVlX3NjcmlwdF9fIGZyb20gXCIhIWJhYmVsLWxvYWRlciEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLW1hcmtkb3duLWxvYWRlci9saWIvbWFya2Rvd24tY29tcGlsZXIuanM/cmF3IS4vSW5kZXgubWRcIlxuLyogdGVtcGxhdGUgKi9cbmltcG9ydCBfX3Z1ZV90ZW1wbGF0ZV9fIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleD97XFxcImlkXFxcIjpcXFwiZGF0YS12LWQ0M2ExZTdhXFxcIixcXFwiaGFzU2NvcGVkXFxcIjpmYWxzZSxcXFwiYnVibGVcXFwiOntcXFwidHJhbnNmb3Jtc1xcXCI6e319fSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbWFya2Rvd24tbG9hZGVyL2xpYi9tYXJrZG93bi1jb21waWxlci5qcz9yYXchLi9JbmRleC5tZFwiXG4vKiB0ZW1wbGF0ZSBmdW5jdGlvbmFsICovXG52YXIgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fID0gZmFsc2Vcbi8qIHN0eWxlcyAqL1xudmFyIF9fdnVlX3N0eWxlc19fID0gbnVsbFxuLyogc2NvcGVJZCAqL1xudmFyIF9fdnVlX3Njb3BlSWRfXyA9IG51bGxcbi8qIG1vZHVsZUlkZW50aWZpZXIgKHNlcnZlciBvbmx5KSAqL1xudmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18gPSBudWxsXG52YXIgQ29tcG9uZW50ID0gbm9ybWFsaXplQ29tcG9uZW50KFxuICBfX3Z1ZV9zY3JpcHRfXyxcbiAgX192dWVfdGVtcGxhdGVfXyxcbiAgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fLFxuICBfX3Z1ZV9zdHlsZXNfXyxcbiAgX192dWVfc2NvcGVJZF9fLFxuICBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fXG4pXG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudC5leHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyIS4vbm9kZV9tb2R1bGVzL3Z1ZS1tYXJrZG93bi1sb2FkZXIvbGliL21hcmtkb3duLWNvbXBpbGVyLmpzP3JhdyEuL2RvY3MvY29tcG9uZW50cy9JbmRleC5tZFxuLy8gbW9kdWxlIGlkID0gMzcyXG4vLyBtb2R1bGUgY2h1bmtzID0gNDgiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///372\n')},373:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'undefined\',[_c(\'h1\',[_vm._v("WUI "),_c(\'a\',{attrs:{"href":"https://github.com/w-ui/wui"}},[_c(\'img\',{attrs:{"src":"https://img.shields.io/github/stars/w-ui/wui.svg?style=social&label=Star","alt":"github start"}})])]),_vm._v(" "),_c(\'p\',[_c(\'a\',{attrs:{"href":"https://travis-ci.org/wmfe/wui"}},[_c(\'img\',{attrs:{"src":"https://travis-ci.org/wmfe/wui.svg?branch=master","alt":"Build Status"}})]),_vm._v(" "),_c(\'a\',{attrs:{"href":"https://coveralls.io/github/wmfe/wui?branch=master"}},[_c(\'img\',{attrs:{"src":"https://coveralls.io/repos/github/wmfe/wui/badge.svg?branch=master","alt":"Coverage Status"}})]),_vm._v(" "),_c(\'a\',{attrs:{"href":"https://npmjs.org/package/w-ui"}},[_c(\'img\',{attrs:{"src":"http://img.shields.io/npm/dm/w-ui.svg","alt":"NPM downloads"}})]),_vm._v(" "),_c(\'a\',{attrs:{"href":"https://npmjs.org/package/w-ui"}},[_c(\'img\',{attrs:{"src":"https://img.shields.io/github/downloads/w-ui/wui/total.svg","alt":"Github All Releases"}})]),_vm._v(" "),_c(\'a\',{attrs:{"href":"https://npmjs.org/package/w-ui"}},[_c(\'img\',{attrs:{"src":"https://img.shields.io/npm/l/w-ui.svg","alt":"NPM licence"}})]),_vm._v(" "),_c(\'a\',{attrs:{"href":"https://www.npmjs.org/package/w-ui"}},[_c(\'img\',{attrs:{"src":"https://img.shields.io/npm/v/w-ui.svg","alt":"npm package"}})]),_vm._v(" "),_c(\'a\',{attrs:{"href":"https://github.com/w-ui/wui"}},[_c(\'img\',{attrs:{"src":"https://img.shields.io/github/release/w-ui/wui.svg","alt":"GitHub release"}})]),_vm._v(" "),_c(\'a\',{attrs:{"href":"https://github.com/w-ui/wui"}},[_c(\'img\',{attrs:{"src":"https://img.shields.io/github/search/w-ui/wui/goto.svg","alt":"Github search hit counter"}})]),_vm._v(" "),_c(\'a\',{attrs:{"href":"https://github.com/w-ui/wui"}},[_c(\'img\',{attrs:{"src":"https://img.shields.io/bithound/dependencies/github/w-ui/wui.svg","alt":"bitHound"}})])]),_vm._v(" "),_c(\'p\',[_c(\'a\',{attrs:{"href":"https://github.com/w-ui/wui/issues"}},[_c(\'img\',{attrs:{"src":"https://img.shields.io/github/issues/w-ui/wui.svg","alt":"GitHub issues"}})]),_vm._v(" "),_c(\'a\',{attrs:{"href":"https://github.com/w-ui/wui/issues"}},[_c(\'img\',{attrs:{"src":"https://img.shields.io/github/issues-closed/w-ui/wui.svg","alt":"GitHub closed issues"}})]),_vm._v(" "),_c(\'a\',{attrs:{"href":"https://github.com/w-ui/wui"}},[_c(\'img\',{attrs:{"src":"https://img.shields.io/gitter/room/w-ui/wui.svg","alt":"Gitter"}})])]),_vm._v(" "),_c(\'h1\',[_vm._v("51组件")]),_vm._v(" "),_c(\'h3\',[_vm._v("手机扫码查看示例")]),_vm._v(" "),[_c(\'w-qrcode\',{attrs:{"text":_vm.url,"size":256,"image":"/img/wui.png"}})]],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__["a"] = (esExports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzczLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vZG9jcy9jb21wb25lbnRzL0luZGV4Lm1kPzkyYjQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3VuZGVmaW5lZCcsW19jKCdoMScsW192bS5fdihcIldVSSBcIiksX2MoJ2EnLHthdHRyczp7XCJocmVmXCI6XCJodHRwczovL2dpdGh1Yi5jb20vdy11aS93dWlcIn19LFtfYygnaW1nJyx7YXR0cnM6e1wic3JjXCI6XCJodHRwczovL2ltZy5zaGllbGRzLmlvL2dpdGh1Yi9zdGFycy93LXVpL3d1aS5zdmc/c3R5bGU9c29jaWFsJmxhYmVsPVN0YXJcIixcImFsdFwiOlwiZ2l0aHViIHN0YXJ0XCJ9fSldKV0pLF92bS5fdihcIiBcIiksX2MoJ3AnLFtfYygnYScse2F0dHJzOntcImhyZWZcIjpcImh0dHBzOi8vdHJhdmlzLWNpLm9yZy93bWZlL3d1aVwifX0sW19jKCdpbWcnLHthdHRyczp7XCJzcmNcIjpcImh0dHBzOi8vdHJhdmlzLWNpLm9yZy93bWZlL3d1aS5zdmc/YnJhbmNoPW1hc3RlclwiLFwiYWx0XCI6XCJCdWlsZCBTdGF0dXNcIn19KV0pLF92bS5fdihcIiBcIiksX2MoJ2EnLHthdHRyczp7XCJocmVmXCI6XCJodHRwczovL2NvdmVyYWxscy5pby9naXRodWIvd21mZS93dWk/YnJhbmNoPW1hc3RlclwifX0sW19jKCdpbWcnLHthdHRyczp7XCJzcmNcIjpcImh0dHBzOi8vY292ZXJhbGxzLmlvL3JlcG9zL2dpdGh1Yi93bWZlL3d1aS9iYWRnZS5zdmc/YnJhbmNoPW1hc3RlclwiLFwiYWx0XCI6XCJDb3ZlcmFnZSBTdGF0dXNcIn19KV0pLF92bS5fdihcIiBcIiksX2MoJ2EnLHthdHRyczp7XCJocmVmXCI6XCJodHRwczovL25wbWpzLm9yZy9wYWNrYWdlL3ctdWlcIn19LFtfYygnaW1nJyx7YXR0cnM6e1wic3JjXCI6XCJodHRwOi8vaW1nLnNoaWVsZHMuaW8vbnBtL2RtL3ctdWkuc3ZnXCIsXCJhbHRcIjpcIk5QTSBkb3dubG9hZHNcIn19KV0pLF92bS5fdihcIiBcIiksX2MoJ2EnLHthdHRyczp7XCJocmVmXCI6XCJodHRwczovL25wbWpzLm9yZy9wYWNrYWdlL3ctdWlcIn19LFtfYygnaW1nJyx7YXR0cnM6e1wic3JjXCI6XCJodHRwczovL2ltZy5zaGllbGRzLmlvL2dpdGh1Yi9kb3dubG9hZHMvdy11aS93dWkvdG90YWwuc3ZnXCIsXCJhbHRcIjpcIkdpdGh1YiBBbGwgUmVsZWFzZXNcIn19KV0pLF92bS5fdihcIiBcIiksX2MoJ2EnLHthdHRyczp7XCJocmVmXCI6XCJodHRwczovL25wbWpzLm9yZy9wYWNrYWdlL3ctdWlcIn19LFtfYygnaW1nJyx7YXR0cnM6e1wic3JjXCI6XCJodHRwczovL2ltZy5zaGllbGRzLmlvL25wbS9sL3ctdWkuc3ZnXCIsXCJhbHRcIjpcIk5QTSBsaWNlbmNlXCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdhJyx7YXR0cnM6e1wiaHJlZlwiOlwiaHR0cHM6Ly93d3cubnBtanMub3JnL3BhY2thZ2Uvdy11aVwifX0sW19jKCdpbWcnLHthdHRyczp7XCJzcmNcIjpcImh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vbnBtL3Yvdy11aS5zdmdcIixcImFsdFwiOlwibnBtIHBhY2thZ2VcIn19KV0pLF92bS5fdihcIiBcIiksX2MoJ2EnLHthdHRyczp7XCJocmVmXCI6XCJodHRwczovL2dpdGh1Yi5jb20vdy11aS93dWlcIn19LFtfYygnaW1nJyx7YXR0cnM6e1wic3JjXCI6XCJodHRwczovL2ltZy5zaGllbGRzLmlvL2dpdGh1Yi9yZWxlYXNlL3ctdWkvd3VpLnN2Z1wiLFwiYWx0XCI6XCJHaXRIdWIgcmVsZWFzZVwifX0pXSksX3ZtLl92KFwiIFwiKSxfYygnYScse2F0dHJzOntcImhyZWZcIjpcImh0dHBzOi8vZ2l0aHViLmNvbS93LXVpL3d1aVwifX0sW19jKCdpbWcnLHthdHRyczp7XCJzcmNcIjpcImh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZ2l0aHViL3NlYXJjaC93LXVpL3d1aS9nb3RvLnN2Z1wiLFwiYWx0XCI6XCJHaXRodWIgc2VhcmNoIGhpdCBjb3VudGVyXCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdhJyx7YXR0cnM6e1wiaHJlZlwiOlwiaHR0cHM6Ly9naXRodWIuY29tL3ctdWkvd3VpXCJ9fSxbX2MoJ2ltZycse2F0dHJzOntcInNyY1wiOlwiaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iaXRob3VuZC9kZXBlbmRlbmNpZXMvZ2l0aHViL3ctdWkvd3VpLnN2Z1wiLFwiYWx0XCI6XCJiaXRIb3VuZFwifX0pXSldKSxfdm0uX3YoXCIgXCIpLF9jKCdwJyxbX2MoJ2EnLHthdHRyczp7XCJocmVmXCI6XCJodHRwczovL2dpdGh1Yi5jb20vdy11aS93dWkvaXNzdWVzXCJ9fSxbX2MoJ2ltZycse2F0dHJzOntcInNyY1wiOlwiaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9naXRodWIvaXNzdWVzL3ctdWkvd3VpLnN2Z1wiLFwiYWx0XCI6XCJHaXRIdWIgaXNzdWVzXCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdhJyx7YXR0cnM6e1wiaHJlZlwiOlwiaHR0cHM6Ly9naXRodWIuY29tL3ctdWkvd3VpL2lzc3Vlc1wifX0sW19jKCdpbWcnLHthdHRyczp7XCJzcmNcIjpcImh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZ2l0aHViL2lzc3Vlcy1jbG9zZWQvdy11aS93dWkuc3ZnXCIsXCJhbHRcIjpcIkdpdEh1YiBjbG9zZWQgaXNzdWVzXCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdhJyx7YXR0cnM6e1wiaHJlZlwiOlwiaHR0cHM6Ly9naXRodWIuY29tL3ctdWkvd3VpXCJ9fSxbX2MoJ2ltZycse2F0dHJzOntcInNyY1wiOlwiaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9naXR0ZXIvcm9vbS93LXVpL3d1aS5zdmdcIixcImFsdFwiOlwiR2l0dGVyXCJ9fSldKV0pLF92bS5fdihcIiBcIiksX2MoJ2gxJyxbX3ZtLl92KFwiNTHnu4Tku7ZcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdoMycsW192bS5fdihcIuaJi+acuuaJq+eggeafpeeci+ekuuS+i1wiKV0pLF92bS5fdihcIiBcIiksW19jKCd3LXFyY29kZScse2F0dHJzOntcInRleHRcIjpfdm0udXJsLFwic2l6ZVwiOjI1NixcImltYWdlXCI6XCIvaW1nL3d1aS5wbmdcIn19KV1dLDIpfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG52YXIgZXNFeHBvcnRzID0geyByZW5kZXI6IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnMgfVxuZXhwb3J0IGRlZmF1bHQgZXNFeHBvcnRzXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXI/e1wiaWRcIjpcImRhdGEtdi1kNDNhMWU3YVwiLFwiaGFzU2NvcGVkXCI6ZmFsc2UsXCJidWJsZVwiOntcInRyYW5zZm9ybXNcIjp7fX19IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL25vZGVfbW9kdWxlcy92dWUtbWFya2Rvd24tbG9hZGVyL2xpYi9tYXJrZG93bi1jb21waWxlci5qcz9yYXchLi9kb2NzL2NvbXBvbmVudHMvSW5kZXgubWRcbi8vIG1vZHVsZSBpZCA9IDM3M1xuLy8gbW9kdWxlIGNodW5rcyA9IDQ4Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///373\n')},76:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _qrwrap = __webpack_require__(108);\n\nexports.default = {\n  name: 'w-qrcode',\n  props: {\n    text: {\n      type: String,\n      default: ''\n    },\n    image: {\n      type: String,\n      default: ''\n    },\n    size: {\n      type: Number,\n      default: 128\n    }\n  },\n  mounted: function mounted() {\n    (0, _qrwrap.drawQrcode)(this.$refs.canvas, {\n      render: 'canvas',\n      size: this.size,\n      text: this.text,\n      image: this.image\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vcXJjb2RlLnZ1ZT9mMGE3Il0sInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8Y2FudmFzIHJlZj1cImNhbnZhc1wiPjwvY2FudmFzPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQge2RyYXdRcmNvZGV9IGZyb20gJy4vcXJ3cmFwLmpzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAndy1xcmNvZGUnLFxuICBwcm9wczoge1xuICAgIHRleHQ6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICcnXG4gICAgfSwgXG4gICAgaW1hZ2U6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICcnXG4gICAgfSwgXG4gICAgc2l6ZToge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogMTI4XG4gICAgfVxuICB9LFxuICBtb3VudGVkKCl7XG4gICAgZHJhd1FyY29kZSh0aGlzLiRyZWZzLmNhbnZhcywge1xuICAgICAgcmVuZGVyOiAnY2FudmFzJyxcbiAgICAgIHNpemU6IHRoaXMuc2l6ZSxcbiAgICAgIHRleHQ6IHRoaXMudGV4dCxcbiAgICAgIGltYWdlOiB0aGlzLmltYWdlXG4gICAgfSk7XG4gIH1cbn1cbjwvc2NyaXB0PlxuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gcXJjb2RlLnZ1ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBT0E7QUFDQTs7QUFHQTs7O0FBR0E7QUFDQTtBQUZBOztBQUtBO0FBQ0E7QUFGQTs7QUFLQTtBQUNBO0FBRkE7QUFUQTtBQWNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQXZCQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///76\n")}});